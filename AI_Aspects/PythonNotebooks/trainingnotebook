{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":10638393,"sourceType":"datasetVersion","datasetId":6586843}],"dockerImageVersionId":30840,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true},"colab":{"provenance":[{"file_id":"https://storage.googleapis.com/kaggle-colab-exported-notebooks/newfinalnotebook-5fecae81-4bb8-4e15-a111-b01a00f18c39.ipynb?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com/20250203/auto/storage/goog4_request&X-Goog-Date=20250203T110012Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=57298d1bce5961263ed1a4d112c0ded61ca55f38855afcfad817181dd17563567593afb315854509fdb202852ee4ea6b7eb496752c7ec8b56034788cc6de7b79b1ad2a12e3f1b2749e743421f6a53b26a2e44630ed8847d1f72fe8a777d9a0b6f3b68f84e45d44bc049978dd8ff961cca6a5d40478006ae6de237ce5991bd8dd10628acacc31efa62c53ec6f65933016448a5507b85e13572d469f2bf020508e7d8fe2eaed8ada5b207cbf6e4398e60113cdc2a108d974cafc41452adc3405f8317ec3bdf70b646e558c747f8f58c501a25bc04b596a3dc18037dd12026e1ff9d70ac74b9a433fb9d0342f676256a7faf400addf6d81c50a9664f99de6886c17","timestamp":1738580492398}]}},"nbformat_minor":0,"nbformat":4,"cells":[{"source":["# IMPORTANT: RUN THIS CELL IN ORDER TO IMPORT YOUR KAGGLE DATA SOURCES,\n","# THEN FEEL FREE TO DELETE THIS CELL.\n","# NOTE: THIS NOTEBOOK ENVIRONMENT DIFFERS FROM KAGGLE'S PYTHON\n","# ENVIRONMENT SO THERE MAY BE MISSING LIBRARIES USED BY YOUR\n","# NOTEBOOK.\n","import kagglehub\n","adithyasarma_final_dataset_path = kagglehub.dataset_download('adithyasarma/final-dataset')\n","\n","print('Data source import complete.')\n"],"metadata":{"id":"2pych0Jtd9SF"},"cell_type":"code","outputs":[],"execution_count":null},{"cell_type":"code","source":["!pip install kaggle ultralytics torch torchvision opencv-python --quiet"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-03T09:49:20.31683Z","iopub.execute_input":"2025-02-03T09:49:20.317257Z","iopub.status.idle":"2025-02-03T09:49:23.695621Z","shell.execute_reply.started":"2025-02-03T09:49:20.317223Z","shell.execute_reply":"2025-02-03T09:49:23.694683Z"},"id":"UQXHrR51d9SH"},"outputs":[],"execution_count":null},{"cell_type":"code","source":["import os\n","print(os.path.exists(\"/kaggle/input/final-dataset/dataset/val/images\"))"],"metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-02-03T09:49:01.291356Z","iopub.execute_input":"2025-02-03T09:49:01.29162Z","iopub.status.idle":"2025-02-03T09:49:01.296236Z","shell.execute_reply.started":"2025-02-03T09:49:01.291593Z","shell.execute_reply":"2025-02-03T09:49:01.295291Z"},"id":"Ii8fHZsCd9SH","outputId":"41336775-1d78-4b01-e3ee-1fa871b99f4f"},"outputs":[{"name":"stdout","text":"True\n","output_type":"stream"}],"execution_count":null},{"cell_type":"code","source":["import torch\n","print(\"CUDA available:\", torch.cuda.is_available())\n","print(\"CUDA device count:\", torch.cuda.device_count())\n","if torch.cuda.is_available():\n","    for i in range(torch.cuda.device_count()):\n","        print(f\"Device {i}: {torch.cuda.get_device_name(i)}\")"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-03T09:49:04.555993Z","iopub.execute_input":"2025-02-03T09:49:04.556285Z","iopub.status.idle":"2025-02-03T09:49:04.562645Z","shell.execute_reply.started":"2025-02-03T09:49:04.556263Z","shell.execute_reply":"2025-02-03T09:49:04.561892Z"},"id":"rreFAKnmd9SH","outputId":"5531e082-a48b-4347-f93e-9859835f8c7b"},"outputs":[{"name":"stdout","text":"CUDA available: True\nCUDA device count: 2\nDevice 0: Tesla T4\nDevice 1: Tesla T4\n","output_type":"stream"}],"execution_count":null},{"cell_type":"code","source":["input_dataset = \"/kaggle/input/final-dataset/dataset\"\n","working_dataset = \"/kaggle/input/final-dataset/dataset\""],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-03T09:49:29.285299Z","iopub.execute_input":"2025-02-03T09:49:29.28558Z","iopub.status.idle":"2025-02-03T09:49:29.289463Z","shell.execute_reply.started":"2025-02-03T09:49:29.285558Z","shell.execute_reply":"2025-02-03T09:49:29.288584Z"},"id":"TB45H9DVd9SH"},"outputs":[],"execution_count":null},{"cell_type":"code","source":["yaml_content = f\"\"\"\n","path: {working_dataset}\n","train: train/images\n","val: val/images\n","test: test/images\n","\n","names:\n","  0: Horus\n","  1: Osiris\n","  2: Anubis\n","  3: Bastet\n","  4: Ra\n","\n","nc: 5\n","\"\"\"\n","\n","with open(\"/kaggle/working/data.yaml\", \"w\") as f:\n","    f.write(yaml_content)\n","\n","print(\"data.yaml created!\")"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-03T09:49:35.3199Z","iopub.execute_input":"2025-02-03T09:49:35.320218Z","iopub.status.idle":"2025-02-03T09:49:35.325667Z","shell.execute_reply.started":"2025-02-03T09:49:35.320191Z","shell.execute_reply":"2025-02-03T09:49:35.324718Z"},"id":"zZzpWzB5d9SI","outputId":"086edfaf-b811-457e-9554-df5d7da1b05d"},"outputs":[{"name":"stdout","text":"data.yaml created!\n","output_type":"stream"}],"execution_count":null},{"cell_type":"code","source":["from ultralytics import YOLO\n","\n","# Loading the yolo model\n","model = YOLO(\"yolo11n.pt\")\n","\n","# Training Parameters for our custom data\n","model.train(\n","    data=\"/kaggle/working/data.yaml\",\n","    epochs=150,\n","    imgsz=640,\n","    batch=32,\n","    device=0,\n","    half=True,\n","    project=\"/kaggle/working/results\",\n","    name=\"aircraft_detection_new3\"\n",")"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-03T09:59:45.790367Z","iopub.execute_input":"2025-02-03T09:59:45.79069Z"},"id":"xj9mJOyXd9SI","outputId":"57203eb5-7a9f-4273-b124-7c1033a6223b"},"outputs":[{"name":"stdout","text":"Ultralytics 8.3.70 🚀 Python-3.10.12 torch-2.5.1+cu121 CUDA:0 (Tesla T4, 15095MiB)\n\u001b[34m\u001b[1mengine/trainer: \u001b[0mtask=detect, mode=train, model=yolo11n.pt, data=/kaggle/working/data.yaml, epochs=150, time=None, patience=100, batch=32, imgsz=640, save=True, save_period=-1, cache=False, device=0, workers=8, project=/kaggle/working/results, name=aircraft_detection_new35, exist_ok=False, pretrained=True, optimizer=auto, verbose=True, seed=0, deterministic=True, single_cls=False, rect=False, cos_lr=False, close_mosaic=10, resume=False, amp=True, fraction=1.0, profile=False, freeze=None, multi_scale=False, overlap_mask=True, mask_ratio=4, dropout=0.0, val=True, split=val, save_json=False, save_hybrid=False, conf=None, iou=0.7, max_det=300, half=True, dnn=False, plots=True, source=None, vid_stride=1, stream_buffer=False, visualize=False, augment=False, agnostic_nms=False, classes=None, retina_masks=False, embed=None, show=False, save_frames=False, save_txt=False, save_conf=False, save_crop=False, show_labels=True, show_conf=True, show_boxes=True, line_width=None, format=torchscript, keras=False, optimize=False, int8=False, dynamic=False, simplify=True, opset=None, workspace=None, nms=False, lr0=0.01, lrf=0.01, momentum=0.937, weight_decay=0.0005, warmup_epochs=3.0, warmup_momentum=0.8, warmup_bias_lr=0.1, box=7.5, cls=0.5, dfl=1.5, pose=12.0, kobj=1.0, nbs=64, hsv_h=0.015, hsv_s=0.7, hsv_v=0.4, degrees=0.0, translate=0.1, scale=0.5, shear=0.0, perspective=0.0, flipud=0.0, fliplr=0.5, bgr=0.0, mosaic=1.0, mixup=0.0, copy_paste=0.0, copy_paste_mode=flip, auto_augment=randaugment, erasing=0.4, crop_fraction=1.0, cfg=None, tracker=botsort.yaml, save_dir=/kaggle/working/results/aircraft_detection_new35\nOverriding model.yaml nc=80 with nc=5\n\n                   from  n    params  module                                       arguments                     \n  0                  -1  1       464  ultralytics.nn.modules.conv.Conv             [3, 16, 3, 2]                 \n  1                  -1  1      4672  ultralytics.nn.modules.conv.Conv             [16, 32, 3, 2]                \n  2                  -1  1      6640  ultralytics.nn.modules.block.C3k2            [32, 64, 1, False, 0.25]      \n  3                  -1  1     36992  ultralytics.nn.modules.conv.Conv             [64, 64, 3, 2]                \n  4                  -1  1     26080  ultralytics.nn.modules.block.C3k2            [64, 128, 1, False, 0.25]     \n  5                  -1  1    147712  ultralytics.nn.modules.conv.Conv             [128, 128, 3, 2]              \n  6                  -1  1     87040  ultralytics.nn.modules.block.C3k2            [128, 128, 1, True]           \n  7                  -1  1    295424  ultralytics.nn.modules.conv.Conv             [128, 256, 3, 2]              \n  8                  -1  1    346112  ultralytics.nn.modules.block.C3k2            [256, 256, 1, True]           \n  9                  -1  1    164608  ultralytics.nn.modules.block.SPPF            [256, 256, 5]                 \n 10                  -1  1    249728  ultralytics.nn.modules.block.C2PSA           [256, 256, 1]                 \n 11                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n 12             [-1, 6]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n 13                  -1  1    111296  ultralytics.nn.modules.block.C3k2            [384, 128, 1, False]          \n 14                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n 15             [-1, 4]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n 16                  -1  1     32096  ultralytics.nn.modules.block.C3k2            [256, 64, 1, False]           \n 17                  -1  1     36992  ultralytics.nn.modules.conv.Conv             [64, 64, 3, 2]                \n 18            [-1, 13]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n 19                  -1  1     86720  ultralytics.nn.modules.block.C3k2            [192, 128, 1, False]          \n 20                  -1  1    147712  ultralytics.nn.modules.conv.Conv             [128, 128, 3, 2]              \n 21            [-1, 10]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n 22                  -1  1    378880  ultralytics.nn.modules.block.C3k2            [384, 256, 1, True]           \n 23        [16, 19, 22]  1    431647  ultralytics.nn.modules.head.Detect           [5, [64, 128, 256]]           \nYOLO11n summary: 319 layers, 2,590,815 parameters, 2,590,799 gradients, 6.4 GFLOPs\n\nTransferred 448/499 items from pretrained weights\n\u001b[34m\u001b[1mTensorBoard: \u001b[0mStart with 'tensorboard --logdir /kaggle/working/results/aircraft_detection_new35', view at http://localhost:6006/\nFreezing layer 'model.23.dfl.conv.weight'\n\u001b[34m\u001b[1mAMP: \u001b[0mrunning Automatic Mixed Precision (AMP) checks...\n\u001b[34m\u001b[1mAMP: \u001b[0mchecks passed ✅\n","output_type":"stream"},{"name":"stderr","text":"\u001b[34m\u001b[1mtrain: \u001b[0mScanning /kaggle/input/final-dataset/dataset/train/labels... 13196 images, 0 backgrounds, 0 corrupt: 100%|██████████| 13196/13196 [00:16<00:00, 803.94it/s]\n","output_type":"stream"},{"name":"stdout","text":"\u001b[34m\u001b[1mtrain: \u001b[0mWARNING ⚠️ Cache directory /kaggle/input/final-dataset/dataset/train is not writeable, cache not saved.\n\u001b[34m\u001b[1malbumentations: \u001b[0mBlur(p=0.01, blur_limit=(3, 7)), MedianBlur(p=0.01, blur_limit=(3, 7)), ToGray(p=0.01, num_output_channels=3, method='weighted_average'), CLAHE(p=0.01, clip_limit=(1.0, 4.0), tile_grid_size=(8, 8))\n","output_type":"stream"},{"name":"stderr","text":"\u001b[34m\u001b[1mval: \u001b[0mScanning /kaggle/input/final-dataset/dataset/val/labels... 2828 images, 0 backgrounds, 0 corrupt: 100%|██████████| 2828/2828 [00:03<00:00, 749.30it/s]\n","output_type":"stream"},{"name":"stdout","text":"\u001b[34m\u001b[1mval: \u001b[0mWARNING ⚠️ Cache directory /kaggle/input/final-dataset/dataset/val is not writeable, cache not saved.\nPlotting labels to /kaggle/working/results/aircraft_detection_new35/labels.jpg... \n\u001b[34m\u001b[1moptimizer:\u001b[0m 'optimizer=auto' found, ignoring 'lr0=0.01' and 'momentum=0.937' and determining best 'optimizer', 'lr0' and 'momentum' automatically... \n\u001b[34m\u001b[1moptimizer:\u001b[0m SGD(lr=0.01, momentum=0.9) with parameter groups 81 weight(decay=0.0), 88 weight(decay=0.0005), 87 bias(decay=0.0)\n\u001b[34m\u001b[1mTensorBoard: \u001b[0mmodel graph visualization added ✅\nImage sizes 640 train, 640 val\nUsing 2 dataloader workers\nLogging results to \u001b[1m/kaggle/working/results/aircraft_detection_new35\u001b[0m\nStarting training for 150 epochs...\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"      1/150      6.99G       1.04      3.047       1.26         39        640: 100%|██████████| 413/413 [04:02<00:00,  1.71it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 45/45 [00:35<00:00,  1.25it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2828       5030      0.184      0.557      0.159      0.108\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"      2/150      7.01G      1.081      2.449      1.243         41        640: 100%|██████████| 413/413 [04:01<00:00,  1.71it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 45/45 [00:33<00:00,  1.33it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2828       5030      0.182      0.501      0.146      0.101\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"      3/150      5.96G       1.19      2.346      1.311         40        640: 100%|██████████| 413/413 [04:02<00:00,  1.70it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 45/45 [00:33<00:00,  1.33it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2828       5030       0.15       0.39      0.116     0.0664\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"      4/150       6.1G      1.272       2.28      1.373         54        640: 100%|██████████| 413/413 [04:01<00:00,  1.71it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 45/45 [00:33<00:00,  1.35it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2828       5030      0.166      0.437      0.137     0.0847\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"      5/150      7.44G      1.201       2.15      1.321         56        640: 100%|██████████| 413/413 [04:00<00:00,  1.72it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 45/45 [00:33<00:00,  1.34it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2828       5030       0.17      0.512      0.151      0.101\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"      6/150      5.51G      1.147      2.065      1.292         32        640: 100%|██████████| 413/413 [03:57<00:00,  1.74it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 45/45 [00:33<00:00,  1.36it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2828       5030      0.178       0.55      0.149      0.102\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"      7/150      6.48G      1.109      2.017      1.271         60        640: 100%|██████████| 413/413 [04:03<00:00,  1.70it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 45/45 [00:33<00:00,  1.33it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2828       5030      0.175      0.634      0.167      0.117\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"      8/150      7.74G       1.09      1.989       1.26         44        640: 100%|██████████| 413/413 [03:58<00:00,  1.73it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 45/45 [00:33<00:00,  1.34it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2828       5030      0.188      0.643       0.18       0.13\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"      9/150      5.63G      1.056      1.959      1.243         66        640: 100%|██████████| 413/413 [04:01<00:00,  1.71it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 45/45 [00:33<00:00,  1.34it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2828       5030      0.182      0.588      0.164      0.113\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"     10/150      6.82G      1.039      1.928      1.233         56        640: 100%|██████████| 413/413 [03:57<00:00,  1.74it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 45/45 [00:33<00:00,  1.36it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2828       5030      0.181      0.641      0.174      0.124\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"     11/150      7.28G      1.014      1.899      1.216         29        640: 100%|██████████| 413/413 [03:56<00:00,  1.75it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 45/45 [00:33<00:00,  1.35it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2828       5030      0.187      0.653      0.181      0.131\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"     12/150      7.18G      1.007      1.896      1.211         48        640: 100%|██████████| 413/413 [03:57<00:00,  1.74it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 45/45 [00:33<00:00,  1.36it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2828       5030      0.189       0.67      0.192      0.142\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"     13/150      6.33G     0.9933      1.876      1.206         44        640: 100%|██████████| 413/413 [03:56<00:00,  1.74it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 45/45 [00:33<00:00,  1.34it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2828       5030       0.19      0.678      0.192      0.142\n","output_type":"stream"}],"execution_count":null}]}